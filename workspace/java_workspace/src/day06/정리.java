package day06;

public class 정리 {

	public static void main(String[] args) {

		/* 정리
		 * 
		 * 1. 변수
		 * - 일반변수 (지역변수, 기본형 변수) : 값을 저장하느 기본 메모리공간
		 * - 정수형 : int byte shotr long(접미사 L)
		 * - 실수형 : double, float(접미사f)
		 * - 문자형 : char (정수형으로 분류하기도 함 유니코드에 코드로 저장) : 1글자  
		 * - 불리언 : boolean (true / false) 참 거짓 
		 * - 참조변수 : 객체의 주소를 저장하는 변수 (객체명) : new 키워드를 통해 객체 생성
		 * - 자료형변환 : 변수 상수 리터럴 값들을 일시적으로 다른 자료형으로 변환
		 *  -> 자동형병환 : 정수 - 상수 / 작은byte -> 큰 바이트 
		 *  --> 명시적 형변환 : 자동으로 형변환이 안되는 경우 (형변환type)변수명
		 *  
		 *  
		 *  2. 연산자
		 *  -  대입연산자 (=) : 오른쪽 항의 값을 왼쪽 변수에 저장.
		 *  -> 왼쪽항에는 반드시 변수가 있어야함. 변수/객체
		 *  - 왼쪽과 오른쪽의 자료형은 반드시 같아야함.
		 *  - 산술연산자 (+ - * / % )
		 *  - 정수 / 정수 = 정수
		 *  - / 0 으로 나누면 에러 발생 0으로 나눌 수 없음.
		 *  - 비교연산자 (>=,<=,<,>,==,!= ) 
		 *  - > 항상 결과가 true / false로 표현
		 *  - 논리 연산자 (&& || !) and or not
		 *  -&& : and 여러개의 조건이 모두 맞아야 true ~ 이고,~면서
		 *  -|| : or 여러개의 조건 중 하나만 맞아도 true ~이고 , ~또는 (두 가지 조건중 하나만 맞아도 true.)
		 *  - ! : not 현재 조건의 반대
		 *  -증감 연산자 (++ ,--)
		 *  1씩 증가, 감소 . 위치에 따라 증가하고 감소되는 순서가 결정됨.
		 *  i++, ++i
		 *  -조건선택연산자 (조건식 ? true : false)
		 *  -조건식이 참 true / 아니면 false 값을 선택
		 *  
		 *   3.조건문 : 조건식이 true면 실행문을 실행.
		 *   -if , switch
		 *   -if : 조건식이 반드시 true / false 로 구분되어야함.
		 *   -switch : 값이 나오는 식 , 변수로 case1..3..10 이런식으로 조건을 채울 수있음. 
		 *   한개의 case가 끝나면 break;를 꼭꼬 해줘야함..
		 *   
		 *   4.반복문 : 규칙성이 있는 반복
		 *   -for while do ~ while 문
		 *   -for(초기화; 조건식; 증감식) { //조건이 반복하기 위한 true조건으로 작성.
		 *   실행문;(조건, 출력문)
		 *   }
		 *  
		 *  - while (조건식) {
		 *   실행문;
		 *   - 실행문에 반드시 조건식이  false(break;)가 될수있는 구문을 포함해야함. (안그러면 무한반복)
		 *    
		 *  }
		 *  
		 *  -do { //무조건 한번은 실행되어야하는 반복문에서 사용
		 *  실행문;
		 *  } while (조건식);
		 *  
		 *  
		 *  
		 *  5. break,continue 문
		 *   - break; : 반복문을 빠져나가기위한 구문 // if문을 같이 동반하게 됨.
		 *   switch 문에서 case를 빠져나가기 위한 구문.
		 *   
		 *   -continue : pass하는 역할 (조건이 맞을 때 실행x, 다음 증감으로 넘어감)
		 *   while 문에서는 증감식 찾을 수가 없기 때문에 바로 조건식으로 이동.
		 *   이 때 무한루프에 빠지지 않게 조심해야함.
		 *   
		 *   6. 배열
		 *   -동일한 자료형을 가진 데이터를 모아놓은 형태
		 *   -배열 선언
		 *   자료형 배열명[] = new 자료형[개수]; // 선언하고 배열 생성
		 *   -배열의 index는 0부터 ~배열 .length-1 (0번지 포함)
		 *   -배열. length : 배열의 총 길이
		 *   -배열[index] = 값 ;  //배열의 index 번지에 값을 저장
		 *   -변수 = 배열[index] ; 배열의 index 번지의 값을 변수로 추출
		 *   
 		 *
		 *  
		 *  
		 *  
		 *  
		 *  
		 */
		
		
	}

}
